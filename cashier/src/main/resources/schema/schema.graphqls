type Query {
    burgers: [Burger!]
    activeOrders: [Order!]
}

type Burger {
    id: ID!
    name: String!
}

input Request {
    items: [String]
}

type Mutation {
    createOrder(request: Request): Order
}

type Order {
    id: ID!
    subOrders: [SubOrder!]
}

type SubOrder {
    id: ID!
    name: String!
    dishType: String!
    createdAt: String!
    state: State!
}

type Item {
    id: ID!
    name: String!
    dishType: String!
}

enum State {
    requested,
    cooking,
    completed,
    failed
}